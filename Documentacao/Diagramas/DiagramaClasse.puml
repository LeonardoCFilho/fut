@startuml Classes

' Título do diagrama
title Diagrama de Classes

' Classes
class Classes.ExcecaoTemplate {
  message: str
  original_exception: Exception
}
class Classes.ExecutorTestes {
  limparConteudoEntrada(data)
  validarArquivoTeste(arquivoTeste)
  gerarListaArquivosTeste(argsEntrada)
}
class Classes.InicializadorSistema {
  pathFut: Path
  pathSettings: Path
  pathValidator: Path
  returnValorSettings(settingsBuscada)
  alterarValorSetting(configuracaoSerAlterada, novoValor)
  _resolveValidatorPath()
}
class Classes.GeradorRelatorios {
  casos_de_teste_: list
  processarSaidas(caminho_saida_esperada, caminho_saida_real, yaml_valido)
  compararResultados(tupla_dados)
  gerarRelatorios()
  gerarRelatorioJson()
  {static} +modificarChaves(novas_chaves)
  {static} +modificarErrosEsperados(novos_erros_esperados)
}
class Classes.GerenciadorTestes {
  pathFut: Path
  inicializador: InicializadorSistema
  get_instance(pathFut)
  iniciarSistema()
  baixarArquivoUrl(url, enderecoArquivo, requestsTimeout, maxTentativas)
  definirPastaValidator()
  atualizarExecucaoValidator(inicializadorSistema)
  prepararExecucaoTestes(args)
  executarThreadsTeste(listaArquivosTestar, numThreads)
  iniciarCriacaoRelatorio(resultadosValidacao, versaoRelatorio)
  executarTestesCompleto(args, versaoRelatorio, entregaGradual)
}
class Classes.GerenciadorValidator {
  {static} +instalaValidatorCli(pathValidator)
  {static} +verificaVersaoValidator(pathValidator)
  atualizarValidatorCli(pathValidator)
  validarArquivoFhir(arquivoValidar, args)
}
interface Interface {
  obterValorConfiguracao(settingsBuscada)
  atualizarValorConfiguracao(configuracaoSerAlterada, novoValor)
  iniciarExecucaoTestes(args, tipoRelatorio, entregaGradual)
  gerarArquivoTeste(dictInformacoesTeste, caminhoArquivo)
  obterDialogo(dialogoDesejado)
}
protocol Terminal_ui {
  controleAnimacao(status)
  mainMenu(args)
}
package GUI {

}

' Relacoes
Classes.InicializadorSistema <|-- Classes.ExecutorTestes : Herda
Classes.InicializadorSistema <|-- Classes.GerenciadorValidator : Herda
Classes.ExecutorTestes --> Classes.GerenciadorValidator : Validar
Classes.GerenciadorTestes ..> Classes.ExcecaoTemplate : Lida 
Classes.GerenciadorValidator ..> Classes.ExcecaoTemplate : Levanta 
Classes.GerenciadorTestes --> Classes.ExecutorTestes : Usa 
Classes.GerenciadorTestes --> Classes.GeradorRelatorios : Usa 
Classes.GerenciadorTestes *--> Classes.InicializadorSistema : Contém e utiliza
Interface ..> GerenciadorTestes : Usa
Interface --> InicializadorSistema : Chama via GerenciadorTestes
Terminal_ui ..> Interface : Usa
GUI ..> Interface : Usa
footer Generated by //py2puml//
@enduml